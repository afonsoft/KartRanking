#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KartRanking.BaseDados
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="afonsoftcombr_db")]
	public partial class DataKartDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKart_Calendario_Campeonato(Kart_Calendario_Campeonato instance);
    partial void UpdateKart_Calendario_Campeonato(Kart_Calendario_Campeonato instance);
    partial void DeleteKart_Calendario_Campeonato(Kart_Calendario_Campeonato instance);
    partial void InsertKart_Campeonato(Kart_Campeonato instance);
    partial void UpdateKart_Campeonato(Kart_Campeonato instance);
    partial void DeleteKart_Campeonato(Kart_Campeonato instance);
    partial void InsertKart_Equipe_Campeonato(Kart_Equipe_Campeonato instance);
    partial void UpdateKart_Equipe_Campeonato(Kart_Equipe_Campeonato instance);
    partial void DeleteKart_Equipe_Campeonato(Kart_Equipe_Campeonato instance);
    partial void InsertKart_Grid_Calendario(Kart_Grid_Calendario instance);
    partial void UpdateKart_Grid_Calendario(Kart_Grid_Calendario instance);
    partial void DeleteKart_Grid_Calendario(Kart_Grid_Calendario instance);
    partial void InsertKart_Grupo(Kart_Grupo instance);
    partial void UpdateKart_Grupo(Kart_Grupo instance);
    partial void DeleteKart_Grupo(Kart_Grupo instance);
    partial void InsertKart_Usuario_Equipe_Campeonato(Kart_Usuario_Equipe_Campeonato instance);
    partial void UpdateKart_Usuario_Equipe_Campeonato(Kart_Usuario_Equipe_Campeonato instance);
    partial void DeleteKart_Usuario_Equipe_Campeonato(Kart_Usuario_Equipe_Campeonato instance);
    partial void InsertKart_Usuario_Grupo(Kart_Usuario_Grupo instance);
    partial void UpdateKart_Usuario_Grupo(Kart_Usuario_Grupo instance);
    partial void DeleteKart_Usuario_Grupo(Kart_Usuario_Grupo instance);
    partial void InsertKart_Resultado_Calendario(Kart_Resultado_Calendario instance);
    partial void UpdateKart_Resultado_Calendario(Kart_Resultado_Calendario instance);
    partial void DeleteKart_Resultado_Calendario(Kart_Resultado_Calendario instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertKart_log_erro(Kart_log_erro instance);
    partial void UpdateKart_log_erro(Kart_log_erro instance);
    partial void DeleteKart_log_erro(Kart_log_erro instance);
    partial void InsertKart_Noticias_Grupo(Kart_Noticias_Grupo instance);
    partial void UpdateKart_Noticias_Grupo(Kart_Noticias_Grupo instance);
    partial void DeleteKart_Noticias_Grupo(Kart_Noticias_Grupo instance);
    #endregion
		
		public DataKartDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["afonsoftcombr_dbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataKartDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataKartDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataKartDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataKartDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Kart_Calendario_Campeonato> Kart_Calendario_Campeonatos
		{
			get
			{
				return this.GetTable<Kart_Calendario_Campeonato>();
			}
		}
		
		public System.Data.Linq.Table<Kart_Campeonato> Kart_Campeonatos
		{
			get
			{
				return this.GetTable<Kart_Campeonato>();
			}
		}
		
		public System.Data.Linq.Table<Kart_Equipe_Campeonato> Kart_Equipe_Campeonatos
		{
			get
			{
				return this.GetTable<Kart_Equipe_Campeonato>();
			}
		}
		
		public System.Data.Linq.Table<Kart_Grid_Calendario> Kart_Grid_Calendarios
		{
			get
			{
				return this.GetTable<Kart_Grid_Calendario>();
			}
		}
		
		public System.Data.Linq.Table<Kart_Grupo> Kart_Grupos
		{
			get
			{
				return this.GetTable<Kart_Grupo>();
			}
		}
		
		public System.Data.Linq.Table<Kart_Usuario_Equipe_Campeonato> Kart_Usuario_Equipe_Campeonatos
		{
			get
			{
				return this.GetTable<Kart_Usuario_Equipe_Campeonato>();
			}
		}
		
		public System.Data.Linq.Table<Kart_Usuario_Grupo> Kart_Usuario_Grupos
		{
			get
			{
				return this.GetTable<Kart_Usuario_Grupo>();
			}
		}
		
		public System.Data.Linq.Table<View_Kart_Equipe_Pontos_Campeonato> View_Kart_Equipe_Pontos_Campeonatos
		{
			get
			{
				return this.GetTable<View_Kart_Equipe_Pontos_Campeonato>();
			}
		}
		
		public System.Data.Linq.Table<View_Kart_Usuario_Pontos_Grupo> View_Kart_Usuario_Pontos_Grupos
		{
			get
			{
				return this.GetTable<View_Kart_Usuario_Pontos_Grupo>();
			}
		}
		
		public System.Data.Linq.Table<View_Kart_Usuario_Historico> View_Kart_Usuario_Historicos
		{
			get
			{
				return this.GetTable<View_Kart_Usuario_Historico>();
			}
		}
		
		public System.Data.Linq.Table<View_Kart_Usuario_Pontos_Campeonato> View_Kart_Usuario_Pontos_Campeonatos
		{
			get
			{
				return this.GetTable<View_Kart_Usuario_Pontos_Campeonato>();
			}
		}
		
		public System.Data.Linq.Table<Kart_Resultado_Calendario> Kart_Resultado_Calendarios
		{
			get
			{
				return this.GetTable<Kart_Resultado_Calendario>();
			}
		}
		
		public System.Data.Linq.Table<View_Equipe_Usuario> View_Equipe_Usuarios
		{
			get
			{
				return this.GetTable<View_Equipe_Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Kart_log_erro> Kart_log_erros
		{
			get
			{
				return this.GetTable<Kart_log_erro>();
			}
		}
		
		public System.Data.Linq.Table<Kart_Noticias_Grupo> Kart_Noticias_Grupos
		{
			get
			{
				return this.GetTable<Kart_Noticias_Grupo>();
			}
		}
	}
	
	[Table(Name="afonsoftcombr.Kart_Calendario_Campeonato")]
	public partial class Kart_Calendario_Campeonato : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCalendario;
		
		private int _idCampeonato;
		
		private System.DateTime _Data;
		
		private string _Nome;
		
		private string _Kartodromo;
		
		private string _Horario;
		
		private string _Circuito;
		
		private System.Nullable<System.DateTime> _dtCriacao;
		
		private System.Nullable<bool> _Ativo;
		
		private EntitySet<Kart_Grid_Calendario> _Kart_Grid_Calendarios;
		
		private EntitySet<Kart_Resultado_Calendario> _Kart_Resultado_Calendarios;
		
		private EntityRef<Kart_Campeonato> _Kart_Campeonato;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCalendarioChanging(int value);
    partial void OnidCalendarioChanged();
    partial void OnidCampeonatoChanging(int value);
    partial void OnidCampeonatoChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnKartodromoChanging(string value);
    partial void OnKartodromoChanged();
    partial void OnHorarioChanging(string value);
    partial void OnHorarioChanged();
    partial void OnCircuitoChanging(string value);
    partial void OnCircuitoChanged();
    partial void OndtCriacaoChanging(System.Nullable<System.DateTime> value);
    partial void OndtCriacaoChanged();
    partial void OnAtivoChanging(System.Nullable<bool> value);
    partial void OnAtivoChanged();
    #endregion
		
		public Kart_Calendario_Campeonato()
		{
			this._Kart_Grid_Calendarios = new EntitySet<Kart_Grid_Calendario>(new Action<Kart_Grid_Calendario>(this.attach_Kart_Grid_Calendarios), new Action<Kart_Grid_Calendario>(this.detach_Kart_Grid_Calendarios));
			this._Kart_Resultado_Calendarios = new EntitySet<Kart_Resultado_Calendario>(new Action<Kart_Resultado_Calendario>(this.attach_Kart_Resultado_Calendarios), new Action<Kart_Resultado_Calendario>(this.detach_Kart_Resultado_Calendarios));
			this._Kart_Campeonato = default(EntityRef<Kart_Campeonato>);
			OnCreated();
		}
		
		[Column(Storage="_idCalendario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCalendario
		{
			get
			{
				return this._idCalendario;
			}
			set
			{
				if ((this._idCalendario != value))
				{
					this.OnidCalendarioChanging(value);
					this.SendPropertyChanging();
					this._idCalendario = value;
					this.SendPropertyChanged("idCalendario");
					this.OnidCalendarioChanged();
				}
			}
		}
		
		[Column(Storage="_idCampeonato", DbType="Int NOT NULL")]
		public int idCampeonato
		{
			get
			{
				return this._idCampeonato;
			}
			set
			{
				if ((this._idCampeonato != value))
				{
					if (this._Kart_Campeonato.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCampeonatoChanging(value);
					this.SendPropertyChanging();
					this._idCampeonato = value;
					this.SendPropertyChanged("idCampeonato");
					this.OnidCampeonatoChanged();
				}
			}
		}
		
		[Column(Storage="_Data", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_Kartodromo", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Kartodromo
		{
			get
			{
				return this._Kartodromo;
			}
			set
			{
				if ((this._Kartodromo != value))
				{
					this.OnKartodromoChanging(value);
					this.SendPropertyChanging();
					this._Kartodromo = value;
					this.SendPropertyChanged("Kartodromo");
					this.OnKartodromoChanged();
				}
			}
		}
		
		[Column(Storage="_Horario", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string Horario
		{
			get
			{
				return this._Horario;
			}
			set
			{
				if ((this._Horario != value))
				{
					this.OnHorarioChanging(value);
					this.SendPropertyChanging();
					this._Horario = value;
					this.SendPropertyChanged("Horario");
					this.OnHorarioChanged();
				}
			}
		}
		
		[Column(Storage="_Circuito", DbType="NVarChar(50)")]
		public string Circuito
		{
			get
			{
				return this._Circuito;
			}
			set
			{
				if ((this._Circuito != value))
				{
					this.OnCircuitoChanging(value);
					this.SendPropertyChanging();
					this._Circuito = value;
					this.SendPropertyChanged("Circuito");
					this.OnCircuitoChanged();
				}
			}
		}
		
		[Column(Storage="_dtCriacao", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtCriacao
		{
			get
			{
				return this._dtCriacao;
			}
			set
			{
				if ((this._dtCriacao != value))
				{
					this.OndtCriacaoChanging(value);
					this.SendPropertyChanging();
					this._dtCriacao = value;
					this.SendPropertyChanged("dtCriacao");
					this.OndtCriacaoChanged();
				}
			}
		}
		
		[Column(Storage="_Ativo", DbType="Bit")]
		public System.Nullable<bool> Ativo
		{
			get
			{
				return this._Ativo;
			}
			set
			{
				if ((this._Ativo != value))
				{
					this.OnAtivoChanging(value);
					this.SendPropertyChanging();
					this._Ativo = value;
					this.SendPropertyChanged("Ativo");
					this.OnAtivoChanged();
				}
			}
		}
		
		[Association(Name="Kart_Calendario_Campeonato_Kart_Grid_Calendario", Storage="_Kart_Grid_Calendarios", ThisKey="idCalendario", OtherKey="idCalendario")]
		public EntitySet<Kart_Grid_Calendario> Kart_Grid_Calendarios
		{
			get
			{
				return this._Kart_Grid_Calendarios;
			}
			set
			{
				this._Kart_Grid_Calendarios.Assign(value);
			}
		}
		
		[Association(Name="Kart_Calendario_Campeonato_Kart_Resultado_Calendario", Storage="_Kart_Resultado_Calendarios", ThisKey="idCalendario", OtherKey="idCalendario")]
		public EntitySet<Kart_Resultado_Calendario> Kart_Resultado_Calendarios
		{
			get
			{
				return this._Kart_Resultado_Calendarios;
			}
			set
			{
				this._Kart_Resultado_Calendarios.Assign(value);
			}
		}
		
		[Association(Name="Kart_Campeonato_Kart_Calendario_Campeonato", Storage="_Kart_Campeonato", ThisKey="idCampeonato", OtherKey="idCampeonato", IsForeignKey=true)]
		public Kart_Campeonato Kart_Campeonato
		{
			get
			{
				return this._Kart_Campeonato.Entity;
			}
			set
			{
				Kart_Campeonato previousValue = this._Kart_Campeonato.Entity;
				if (((previousValue != value) 
							|| (this._Kart_Campeonato.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kart_Campeonato.Entity = null;
						previousValue.Kart_Calendario_Campeonatos.Remove(this);
					}
					this._Kart_Campeonato.Entity = value;
					if ((value != null))
					{
						value.Kart_Calendario_Campeonatos.Add(this);
						this._idCampeonato = value.idCampeonato;
					}
					else
					{
						this._idCampeonato = default(int);
					}
					this.SendPropertyChanged("Kart_Campeonato");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kart_Grid_Calendarios(Kart_Grid_Calendario entity)
		{
			this.SendPropertyChanging();
			entity.Kart_Calendario_Campeonato = this;
		}
		
		private void detach_Kart_Grid_Calendarios(Kart_Grid_Calendario entity)
		{
			this.SendPropertyChanging();
			entity.Kart_Calendario_Campeonato = null;
		}
		
		private void attach_Kart_Resultado_Calendarios(Kart_Resultado_Calendario entity)
		{
			this.SendPropertyChanging();
			entity.Kart_Calendario_Campeonato = this;
		}
		
		private void detach_Kart_Resultado_Calendarios(Kart_Resultado_Calendario entity)
		{
			this.SendPropertyChanging();
			entity.Kart_Calendario_Campeonato = null;
		}
	}
	
	[Table(Name="afonsoftcombr.Kart_Campeonato")]
	public partial class Kart_Campeonato : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCampeonato;
		
		private int _idGrupo;
		
		private System.DateTime _dtInicio;
		
		private System.DateTime _dtFim;
		
		private string _NomeCampeonato;
		
		private System.Nullable<System.DateTime> _dtCriacao;
		
		private System.Nullable<bool> _Ativo;
		
		private EntitySet<Kart_Calendario_Campeonato> _Kart_Calendario_Campeonatos;
		
		private EntitySet<Kart_Equipe_Campeonato> _Kart_Equipe_Campeonatos;
		
		private EntityRef<Kart_Grupo> _Kart_Grupo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCampeonatoChanging(int value);
    partial void OnidCampeonatoChanged();
    partial void OnidGrupoChanging(int value);
    partial void OnidGrupoChanged();
    partial void OndtInicioChanging(System.DateTime value);
    partial void OndtInicioChanged();
    partial void OndtFimChanging(System.DateTime value);
    partial void OndtFimChanged();
    partial void OnNomeCampeonatoChanging(string value);
    partial void OnNomeCampeonatoChanged();
    partial void OndtCriacaoChanging(System.Nullable<System.DateTime> value);
    partial void OndtCriacaoChanged();
    partial void OnAtivoChanging(System.Nullable<bool> value);
    partial void OnAtivoChanged();
    #endregion
		
		public Kart_Campeonato()
		{
			this._Kart_Calendario_Campeonatos = new EntitySet<Kart_Calendario_Campeonato>(new Action<Kart_Calendario_Campeonato>(this.attach_Kart_Calendario_Campeonatos), new Action<Kart_Calendario_Campeonato>(this.detach_Kart_Calendario_Campeonatos));
			this._Kart_Equipe_Campeonatos = new EntitySet<Kart_Equipe_Campeonato>(new Action<Kart_Equipe_Campeonato>(this.attach_Kart_Equipe_Campeonatos), new Action<Kart_Equipe_Campeonato>(this.detach_Kart_Equipe_Campeonatos));
			this._Kart_Grupo = default(EntityRef<Kart_Grupo>);
			OnCreated();
		}
		
		[Column(Storage="_idCampeonato", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCampeonato
		{
			get
			{
				return this._idCampeonato;
			}
			set
			{
				if ((this._idCampeonato != value))
				{
					this.OnidCampeonatoChanging(value);
					this.SendPropertyChanging();
					this._idCampeonato = value;
					this.SendPropertyChanged("idCampeonato");
					this.OnidCampeonatoChanged();
				}
			}
		}
		
		[Column(Storage="_idGrupo", DbType="Int NOT NULL")]
		public int idGrupo
		{
			get
			{
				return this._idGrupo;
			}
			set
			{
				if ((this._idGrupo != value))
				{
					if (this._Kart_Grupo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGrupoChanging(value);
					this.SendPropertyChanging();
					this._idGrupo = value;
					this.SendPropertyChanged("idGrupo");
					this.OnidGrupoChanged();
				}
			}
		}
		
		[Column(Storage="_dtInicio", DbType="DateTime NOT NULL")]
		public System.DateTime dtInicio
		{
			get
			{
				return this._dtInicio;
			}
			set
			{
				if ((this._dtInicio != value))
				{
					this.OndtInicioChanging(value);
					this.SendPropertyChanging();
					this._dtInicio = value;
					this.SendPropertyChanged("dtInicio");
					this.OndtInicioChanged();
				}
			}
		}
		
		[Column(Storage="_dtFim", DbType="DateTime NOT NULL")]
		public System.DateTime dtFim
		{
			get
			{
				return this._dtFim;
			}
			set
			{
				if ((this._dtFim != value))
				{
					this.OndtFimChanging(value);
					this.SendPropertyChanging();
					this._dtFim = value;
					this.SendPropertyChanged("dtFim");
					this.OndtFimChanged();
				}
			}
		}
		
		[Column(Storage="_NomeCampeonato", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string NomeCampeonato
		{
			get
			{
				return this._NomeCampeonato;
			}
			set
			{
				if ((this._NomeCampeonato != value))
				{
					this.OnNomeCampeonatoChanging(value);
					this.SendPropertyChanging();
					this._NomeCampeonato = value;
					this.SendPropertyChanged("NomeCampeonato");
					this.OnNomeCampeonatoChanged();
				}
			}
		}
		
		[Column(Storage="_dtCriacao", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtCriacao
		{
			get
			{
				return this._dtCriacao;
			}
			set
			{
				if ((this._dtCriacao != value))
				{
					this.OndtCriacaoChanging(value);
					this.SendPropertyChanging();
					this._dtCriacao = value;
					this.SendPropertyChanged("dtCriacao");
					this.OndtCriacaoChanged();
				}
			}
		}
		
		[Column(Storage="_Ativo", DbType="Bit")]
		public System.Nullable<bool> Ativo
		{
			get
			{
				return this._Ativo;
			}
			set
			{
				if ((this._Ativo != value))
				{
					this.OnAtivoChanging(value);
					this.SendPropertyChanging();
					this._Ativo = value;
					this.SendPropertyChanged("Ativo");
					this.OnAtivoChanged();
				}
			}
		}
		
		[Association(Name="Kart_Campeonato_Kart_Calendario_Campeonato", Storage="_Kart_Calendario_Campeonatos", ThisKey="idCampeonato", OtherKey="idCampeonato")]
		public EntitySet<Kart_Calendario_Campeonato> Kart_Calendario_Campeonatos
		{
			get
			{
				return this._Kart_Calendario_Campeonatos;
			}
			set
			{
				this._Kart_Calendario_Campeonatos.Assign(value);
			}
		}
		
		[Association(Name="Kart_Campeonato_Kart_Equipe_Campeonato", Storage="_Kart_Equipe_Campeonatos", ThisKey="idCampeonato", OtherKey="idCampeonato")]
		public EntitySet<Kart_Equipe_Campeonato> Kart_Equipe_Campeonatos
		{
			get
			{
				return this._Kart_Equipe_Campeonatos;
			}
			set
			{
				this._Kart_Equipe_Campeonatos.Assign(value);
			}
		}
		
		[Association(Name="Kart_Grupo_Kart_Campeonato", Storage="_Kart_Grupo", ThisKey="idGrupo", OtherKey="idGrupo", IsForeignKey=true)]
		public Kart_Grupo Kart_Grupo
		{
			get
			{
				return this._Kart_Grupo.Entity;
			}
			set
			{
				Kart_Grupo previousValue = this._Kart_Grupo.Entity;
				if (((previousValue != value) 
							|| (this._Kart_Grupo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kart_Grupo.Entity = null;
						previousValue.Kart_Campeonatos.Remove(this);
					}
					this._Kart_Grupo.Entity = value;
					if ((value != null))
					{
						value.Kart_Campeonatos.Add(this);
						this._idGrupo = value.idGrupo;
					}
					else
					{
						this._idGrupo = default(int);
					}
					this.SendPropertyChanged("Kart_Grupo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kart_Calendario_Campeonatos(Kart_Calendario_Campeonato entity)
		{
			this.SendPropertyChanging();
			entity.Kart_Campeonato = this;
		}
		
		private void detach_Kart_Calendario_Campeonatos(Kart_Calendario_Campeonato entity)
		{
			this.SendPropertyChanging();
			entity.Kart_Campeonato = null;
		}
		
		private void attach_Kart_Equipe_Campeonatos(Kart_Equipe_Campeonato entity)
		{
			this.SendPropertyChanging();
			entity.Kart_Campeonato = this;
		}
		
		private void detach_Kart_Equipe_Campeonatos(Kart_Equipe_Campeonato entity)
		{
			this.SendPropertyChanging();
			entity.Kart_Campeonato = null;
		}
	}
	
	[Table(Name="afonsoftcombr.Kart_Equipe_Campeonato")]
	public partial class Kart_Equipe_Campeonato : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEquipeCampeonato;
		
		private int _idCampeonato;
		
		private string _NomeEquipe;
		
		private string _Sigla;
		
		private System.Nullable<System.DateTime> _dtCriacao;
		
		private EntitySet<Kart_Usuario_Equipe_Campeonato> _Kart_Usuario_Equipe_Campeonatos;
		
		private EntityRef<Kart_Campeonato> _Kart_Campeonato;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEquipeCampeonatoChanging(int value);
    partial void OnidEquipeCampeonatoChanged();
    partial void OnidCampeonatoChanging(int value);
    partial void OnidCampeonatoChanged();
    partial void OnNomeEquipeChanging(string value);
    partial void OnNomeEquipeChanged();
    partial void OnSiglaChanging(string value);
    partial void OnSiglaChanged();
    partial void OndtCriacaoChanging(System.Nullable<System.DateTime> value);
    partial void OndtCriacaoChanged();
    #endregion
		
		public Kart_Equipe_Campeonato()
		{
			this._Kart_Usuario_Equipe_Campeonatos = new EntitySet<Kart_Usuario_Equipe_Campeonato>(new Action<Kart_Usuario_Equipe_Campeonato>(this.attach_Kart_Usuario_Equipe_Campeonatos), new Action<Kart_Usuario_Equipe_Campeonato>(this.detach_Kart_Usuario_Equipe_Campeonatos));
			this._Kart_Campeonato = default(EntityRef<Kart_Campeonato>);
			OnCreated();
		}
		
		[Column(Storage="_idEquipeCampeonato", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEquipeCampeonato
		{
			get
			{
				return this._idEquipeCampeonato;
			}
			set
			{
				if ((this._idEquipeCampeonato != value))
				{
					this.OnidEquipeCampeonatoChanging(value);
					this.SendPropertyChanging();
					this._idEquipeCampeonato = value;
					this.SendPropertyChanged("idEquipeCampeonato");
					this.OnidEquipeCampeonatoChanged();
				}
			}
		}
		
		[Column(Storage="_idCampeonato", DbType="Int NOT NULL")]
		public int idCampeonato
		{
			get
			{
				return this._idCampeonato;
			}
			set
			{
				if ((this._idCampeonato != value))
				{
					if (this._Kart_Campeonato.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCampeonatoChanging(value);
					this.SendPropertyChanging();
					this._idCampeonato = value;
					this.SendPropertyChanged("idCampeonato");
					this.OnidCampeonatoChanged();
				}
			}
		}
		
		[Column(Storage="_NomeEquipe", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string NomeEquipe
		{
			get
			{
				return this._NomeEquipe;
			}
			set
			{
				if ((this._NomeEquipe != value))
				{
					this.OnNomeEquipeChanging(value);
					this.SendPropertyChanging();
					this._NomeEquipe = value;
					this.SendPropertyChanged("NomeEquipe");
					this.OnNomeEquipeChanged();
				}
			}
		}
		
		[Column(Storage="_Sigla", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sigla
		{
			get
			{
				return this._Sigla;
			}
			set
			{
				if ((this._Sigla != value))
				{
					this.OnSiglaChanging(value);
					this.SendPropertyChanging();
					this._Sigla = value;
					this.SendPropertyChanged("Sigla");
					this.OnSiglaChanged();
				}
			}
		}
		
		[Column(Storage="_dtCriacao", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtCriacao
		{
			get
			{
				return this._dtCriacao;
			}
			set
			{
				if ((this._dtCriacao != value))
				{
					this.OndtCriacaoChanging(value);
					this.SendPropertyChanging();
					this._dtCriacao = value;
					this.SendPropertyChanged("dtCriacao");
					this.OndtCriacaoChanged();
				}
			}
		}
		
		[Association(Name="Kart_Equipe_Campeonato_Kart_Usuario_Equipe_Campeonato", Storage="_Kart_Usuario_Equipe_Campeonatos", ThisKey="idEquipeCampeonato", OtherKey="idEquipeCampeonato")]
		public EntitySet<Kart_Usuario_Equipe_Campeonato> Kart_Usuario_Equipe_Campeonatos
		{
			get
			{
				return this._Kart_Usuario_Equipe_Campeonatos;
			}
			set
			{
				this._Kart_Usuario_Equipe_Campeonatos.Assign(value);
			}
		}
		
		[Association(Name="Kart_Campeonato_Kart_Equipe_Campeonato", Storage="_Kart_Campeonato", ThisKey="idCampeonato", OtherKey="idCampeonato", IsForeignKey=true)]
		public Kart_Campeonato Kart_Campeonato
		{
			get
			{
				return this._Kart_Campeonato.Entity;
			}
			set
			{
				Kart_Campeonato previousValue = this._Kart_Campeonato.Entity;
				if (((previousValue != value) 
							|| (this._Kart_Campeonato.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kart_Campeonato.Entity = null;
						previousValue.Kart_Equipe_Campeonatos.Remove(this);
					}
					this._Kart_Campeonato.Entity = value;
					if ((value != null))
					{
						value.Kart_Equipe_Campeonatos.Add(this);
						this._idCampeonato = value.idCampeonato;
					}
					else
					{
						this._idCampeonato = default(int);
					}
					this.SendPropertyChanged("Kart_Campeonato");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kart_Usuario_Equipe_Campeonatos(Kart_Usuario_Equipe_Campeonato entity)
		{
			this.SendPropertyChanging();
			entity.Kart_Equipe_Campeonato = this;
		}
		
		private void detach_Kart_Usuario_Equipe_Campeonatos(Kart_Usuario_Equipe_Campeonato entity)
		{
			this.SendPropertyChanging();
			entity.Kart_Equipe_Campeonato = null;
		}
	}
	
	[Table(Name="afonsoftcombr.Kart_Grid_Calendario")]
	public partial class Kart_Grid_Calendario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idGrid;
		
		private int _idCalendario;
		
		private int _Pos;
		
		private int _idUsuario;
		
		private int _idEquipe;
		
		private int _Volta;
		
		private int _tempoMinutos;
		
		private int _tempoHoras;
		
		private int _tempoSegundos;
		
		private int _tempoMilisegundos;
		
		private System.Nullable<System.DateTime> _dtcriacao;
		
		private EntityRef<Kart_Calendario_Campeonato> _Kart_Calendario_Campeonato;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGridChanging(int value);
    partial void OnidGridChanged();
    partial void OnidCalendarioChanging(int value);
    partial void OnidCalendarioChanged();
    partial void OnPosChanging(int value);
    partial void OnPosChanged();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnidEquipeChanging(int value);
    partial void OnidEquipeChanged();
    partial void OnVoltaChanging(int value);
    partial void OnVoltaChanged();
    partial void OntempoMinutosChanging(int value);
    partial void OntempoMinutosChanged();
    partial void OntempoHorasChanging(int value);
    partial void OntempoHorasChanged();
    partial void OntempoSegundosChanging(int value);
    partial void OntempoSegundosChanged();
    partial void OntempoMilisegundosChanging(int value);
    partial void OntempoMilisegundosChanged();
    partial void OndtcriacaoChanging(System.Nullable<System.DateTime> value);
    partial void OndtcriacaoChanged();
    #endregion
		
		public Kart_Grid_Calendario()
		{
			this._Kart_Calendario_Campeonato = default(EntityRef<Kart_Calendario_Campeonato>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_idGrid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idGrid
		{
			get
			{
				return this._idGrid;
			}
			set
			{
				if ((this._idGrid != value))
				{
					this.OnidGridChanging(value);
					this.SendPropertyChanging();
					this._idGrid = value;
					this.SendPropertyChanged("idGrid");
					this.OnidGridChanged();
				}
			}
		}
		
		[Column(Storage="_idCalendario", DbType="Int NOT NULL")]
		public int idCalendario
		{
			get
			{
				return this._idCalendario;
			}
			set
			{
				if ((this._idCalendario != value))
				{
					if (this._Kart_Calendario_Campeonato.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCalendarioChanging(value);
					this.SendPropertyChanging();
					this._idCalendario = value;
					this.SendPropertyChanged("idCalendario");
					this.OnidCalendarioChanged();
				}
			}
		}
		
		[Column(Storage="_Pos", DbType="Int NOT NULL")]
		public int Pos
		{
			get
			{
				return this._Pos;
			}
			set
			{
				if ((this._Pos != value))
				{
					this.OnPosChanging(value);
					this.SendPropertyChanging();
					this._Pos = value;
					this.SendPropertyChanged("Pos");
					this.OnPosChanged();
				}
			}
		}
		
		[Column(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_idEquipe", DbType="Int NOT NULL")]
		public int idEquipe
		{
			get
			{
				return this._idEquipe;
			}
			set
			{
				if ((this._idEquipe != value))
				{
					this.OnidEquipeChanging(value);
					this.SendPropertyChanging();
					this._idEquipe = value;
					this.SendPropertyChanged("idEquipe");
					this.OnidEquipeChanged();
				}
			}
		}
		
		[Column(Storage="_Volta", DbType="Int NOT NULL")]
		public int Volta
		{
			get
			{
				return this._Volta;
			}
			set
			{
				if ((this._Volta != value))
				{
					this.OnVoltaChanging(value);
					this.SendPropertyChanging();
					this._Volta = value;
					this.SendPropertyChanged("Volta");
					this.OnVoltaChanged();
				}
			}
		}
		
		[Column(Storage="_tempoMinutos", DbType="Int NOT NULL")]
		public int tempoMinutos
		{
			get
			{
				return this._tempoMinutos;
			}
			set
			{
				if ((this._tempoMinutos != value))
				{
					this.OntempoMinutosChanging(value);
					this.SendPropertyChanging();
					this._tempoMinutos = value;
					this.SendPropertyChanged("tempoMinutos");
					this.OntempoMinutosChanged();
				}
			}
		}
		
		[Column(Storage="_tempoHoras", DbType="Int NOT NULL")]
		public int tempoHoras
		{
			get
			{
				return this._tempoHoras;
			}
			set
			{
				if ((this._tempoHoras != value))
				{
					this.OntempoHorasChanging(value);
					this.SendPropertyChanging();
					this._tempoHoras = value;
					this.SendPropertyChanged("tempoHoras");
					this.OntempoHorasChanged();
				}
			}
		}
		
		[Column(Storage="_tempoSegundos", DbType="Int NOT NULL")]
		public int tempoSegundos
		{
			get
			{
				return this._tempoSegundos;
			}
			set
			{
				if ((this._tempoSegundos != value))
				{
					this.OntempoSegundosChanging(value);
					this.SendPropertyChanging();
					this._tempoSegundos = value;
					this.SendPropertyChanged("tempoSegundos");
					this.OntempoSegundosChanged();
				}
			}
		}
		
		[Column(Storage="_tempoMilisegundos", DbType="Int NOT NULL")]
		public int tempoMilisegundos
		{
			get
			{
				return this._tempoMilisegundos;
			}
			set
			{
				if ((this._tempoMilisegundos != value))
				{
					this.OntempoMilisegundosChanging(value);
					this.SendPropertyChanging();
					this._tempoMilisegundos = value;
					this.SendPropertyChanged("tempoMilisegundos");
					this.OntempoMilisegundosChanged();
				}
			}
		}
		
		[Column(Storage="_dtcriacao", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtcriacao
		{
			get
			{
				return this._dtcriacao;
			}
			set
			{
				if ((this._dtcriacao != value))
				{
					this.OndtcriacaoChanging(value);
					this.SendPropertyChanging();
					this._dtcriacao = value;
					this.SendPropertyChanged("dtcriacao");
					this.OndtcriacaoChanged();
				}
			}
		}
		
		[Association(Name="Kart_Calendario_Campeonato_Kart_Grid_Calendario", Storage="_Kart_Calendario_Campeonato", ThisKey="idCalendario", OtherKey="idCalendario", IsForeignKey=true)]
		public Kart_Calendario_Campeonato Kart_Calendario_Campeonato
		{
			get
			{
				return this._Kart_Calendario_Campeonato.Entity;
			}
			set
			{
				Kart_Calendario_Campeonato previousValue = this._Kart_Calendario_Campeonato.Entity;
				if (((previousValue != value) 
							|| (this._Kart_Calendario_Campeonato.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kart_Calendario_Campeonato.Entity = null;
						previousValue.Kart_Grid_Calendarios.Remove(this);
					}
					this._Kart_Calendario_Campeonato.Entity = value;
					if ((value != null))
					{
						value.Kart_Grid_Calendarios.Add(this);
						this._idCalendario = value.idCalendario;
					}
					else
					{
						this._idCalendario = default(int);
					}
					this.SendPropertyChanged("Kart_Calendario_Campeonato");
				}
			}
		}
		
		[Association(Name="Usuario_Kart_Grid_Calendario", Storage="_Usuario", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Kart_Grid_Calendarios.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Kart_Grid_Calendarios.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="afonsoftcombr.Kart_Grupo")]
	public partial class Kart_Grupo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idGrupo;
		
		private string _NomeGrupo;
		
		private string _Sigla;
		
		private int _Id_Usuario_Lider;
		
		private bool _permitirInsricoes;
		
		private string _UrlAcesso;
		
		private System.Nullable<System.DateTime> _dtCriacao;
		
		private string _Cidade;
		
		private string _Estado;
		
		private System.Nullable<bool> _Ativo;
		
		private EntitySet<Kart_Campeonato> _Kart_Campeonatos;
		
		private EntitySet<Kart_Usuario_Grupo> _Kart_Usuario_Grupos;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGrupoChanging(int value);
    partial void OnidGrupoChanged();
    partial void OnNomeGrupoChanging(string value);
    partial void OnNomeGrupoChanged();
    partial void OnSiglaChanging(string value);
    partial void OnSiglaChanged();
    partial void OnId_Usuario_LiderChanging(int value);
    partial void OnId_Usuario_LiderChanged();
    partial void OnpermitirInsricoesChanging(bool value);
    partial void OnpermitirInsricoesChanged();
    partial void OnUrlAcessoChanging(string value);
    partial void OnUrlAcessoChanged();
    partial void OndtCriacaoChanging(System.Nullable<System.DateTime> value);
    partial void OndtCriacaoChanged();
    partial void OnCidadeChanging(string value);
    partial void OnCidadeChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnAtivoChanging(System.Nullable<bool> value);
    partial void OnAtivoChanged();
    #endregion
		
		public Kart_Grupo()
		{
			this._Kart_Campeonatos = new EntitySet<Kart_Campeonato>(new Action<Kart_Campeonato>(this.attach_Kart_Campeonatos), new Action<Kart_Campeonato>(this.detach_Kart_Campeonatos));
			this._Kart_Usuario_Grupos = new EntitySet<Kart_Usuario_Grupo>(new Action<Kart_Usuario_Grupo>(this.attach_Kart_Usuario_Grupos), new Action<Kart_Usuario_Grupo>(this.detach_Kart_Usuario_Grupos));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_idGrupo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idGrupo
		{
			get
			{
				return this._idGrupo;
			}
			set
			{
				if ((this._idGrupo != value))
				{
					this.OnidGrupoChanging(value);
					this.SendPropertyChanging();
					this._idGrupo = value;
					this.SendPropertyChanged("idGrupo");
					this.OnidGrupoChanged();
				}
			}
		}
		
		[Column(Storage="_NomeGrupo", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NomeGrupo
		{
			get
			{
				return this._NomeGrupo;
			}
			set
			{
				if ((this._NomeGrupo != value))
				{
					this.OnNomeGrupoChanging(value);
					this.SendPropertyChanging();
					this._NomeGrupo = value;
					this.SendPropertyChanged("NomeGrupo");
					this.OnNomeGrupoChanged();
				}
			}
		}
		
		[Column(Storage="_Sigla", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Sigla
		{
			get
			{
				return this._Sigla;
			}
			set
			{
				if ((this._Sigla != value))
				{
					this.OnSiglaChanging(value);
					this.SendPropertyChanging();
					this._Sigla = value;
					this.SendPropertyChanged("Sigla");
					this.OnSiglaChanged();
				}
			}
		}
		
		[Column(Storage="_Id_Usuario_Lider", DbType="Int NOT NULL")]
		public int Id_Usuario_Lider
		{
			get
			{
				return this._Id_Usuario_Lider;
			}
			set
			{
				if ((this._Id_Usuario_Lider != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Usuario_LiderChanging(value);
					this.SendPropertyChanging();
					this._Id_Usuario_Lider = value;
					this.SendPropertyChanged("Id_Usuario_Lider");
					this.OnId_Usuario_LiderChanged();
				}
			}
		}
		
		[Column(Storage="_permitirInsricoes", DbType="Bit NOT NULL")]
		public bool permitirInsricoes
		{
			get
			{
				return this._permitirInsricoes;
			}
			set
			{
				if ((this._permitirInsricoes != value))
				{
					this.OnpermitirInsricoesChanging(value);
					this.SendPropertyChanging();
					this._permitirInsricoes = value;
					this.SendPropertyChanged("permitirInsricoes");
					this.OnpermitirInsricoesChanged();
				}
			}
		}
		
		[Column(Storage="_UrlAcesso", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UrlAcesso
		{
			get
			{
				return this._UrlAcesso;
			}
			set
			{
				if ((this._UrlAcesso != value))
				{
					this.OnUrlAcessoChanging(value);
					this.SendPropertyChanging();
					this._UrlAcesso = value;
					this.SendPropertyChanged("UrlAcesso");
					this.OnUrlAcessoChanged();
				}
			}
		}
		
		[Column(Storage="_dtCriacao", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtCriacao
		{
			get
			{
				return this._dtCriacao;
			}
			set
			{
				if ((this._dtCriacao != value))
				{
					this.OndtCriacaoChanging(value);
					this.SendPropertyChanging();
					this._dtCriacao = value;
					this.SendPropertyChanged("dtCriacao");
					this.OndtCriacaoChanged();
				}
			}
		}
		
		[Column(Storage="_Cidade", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Cidade
		{
			get
			{
				return this._Cidade;
			}
			set
			{
				if ((this._Cidade != value))
				{
					this.OnCidadeChanging(value);
					this.SendPropertyChanging();
					this._Cidade = value;
					this.SendPropertyChanged("Cidade");
					this.OnCidadeChanged();
				}
			}
		}
		
		[Column(Storage="_Estado", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[Column(Storage="_Ativo", DbType="Bit")]
		public System.Nullable<bool> Ativo
		{
			get
			{
				return this._Ativo;
			}
			set
			{
				if ((this._Ativo != value))
				{
					this.OnAtivoChanging(value);
					this.SendPropertyChanging();
					this._Ativo = value;
					this.SendPropertyChanged("Ativo");
					this.OnAtivoChanged();
				}
			}
		}
		
		[Association(Name="Kart_Grupo_Kart_Campeonato", Storage="_Kart_Campeonatos", ThisKey="idGrupo", OtherKey="idGrupo")]
		public EntitySet<Kart_Campeonato> Kart_Campeonatos
		{
			get
			{
				return this._Kart_Campeonatos;
			}
			set
			{
				this._Kart_Campeonatos.Assign(value);
			}
		}
		
		[Association(Name="Kart_Grupo_Kart_Usuario_Grupo", Storage="_Kart_Usuario_Grupos", ThisKey="idGrupo", OtherKey="idGrupo")]
		public EntitySet<Kart_Usuario_Grupo> Kart_Usuario_Grupos
		{
			get
			{
				return this._Kart_Usuario_Grupos;
			}
			set
			{
				this._Kart_Usuario_Grupos.Assign(value);
			}
		}
		
		[Association(Name="Usuario_Kart_Grupo", Storage="_Usuario", ThisKey="Id_Usuario_Lider", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Kart_Grupos.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Kart_Grupos.Add(this);
						this._Id_Usuario_Lider = value.idUsuario;
					}
					else
					{
						this._Id_Usuario_Lider = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kart_Campeonatos(Kart_Campeonato entity)
		{
			this.SendPropertyChanging();
			entity.Kart_Grupo = this;
		}
		
		private void detach_Kart_Campeonatos(Kart_Campeonato entity)
		{
			this.SendPropertyChanging();
			entity.Kart_Grupo = null;
		}
		
		private void attach_Kart_Usuario_Grupos(Kart_Usuario_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Kart_Grupo = this;
		}
		
		private void detach_Kart_Usuario_Grupos(Kart_Usuario_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Kart_Grupo = null;
		}
	}
	
	[Table(Name="afonsoftcombr.Kart_Usuario_Equipe_Campeonato")]
	public partial class Kart_Usuario_Equipe_Campeonato : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuarioEquipeCampeonato;
		
		private int _idEquipeCampeonato;
		
		private int _idUsuario;
		
		private System.Nullable<System.DateTime> _dtCriacao;
		
		private EntityRef<Kart_Equipe_Campeonato> _Kart_Equipe_Campeonato;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioEquipeCampeonatoChanging(int value);
    partial void OnidUsuarioEquipeCampeonatoChanged();
    partial void OnidEquipeCampeonatoChanging(int value);
    partial void OnidEquipeCampeonatoChanged();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OndtCriacaoChanging(System.Nullable<System.DateTime> value);
    partial void OndtCriacaoChanged();
    #endregion
		
		public Kart_Usuario_Equipe_Campeonato()
		{
			this._Kart_Equipe_Campeonato = default(EntityRef<Kart_Equipe_Campeonato>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_idUsuarioEquipeCampeonato", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUsuarioEquipeCampeonato
		{
			get
			{
				return this._idUsuarioEquipeCampeonato;
			}
			set
			{
				if ((this._idUsuarioEquipeCampeonato != value))
				{
					this.OnidUsuarioEquipeCampeonatoChanging(value);
					this.SendPropertyChanging();
					this._idUsuarioEquipeCampeonato = value;
					this.SendPropertyChanged("idUsuarioEquipeCampeonato");
					this.OnidUsuarioEquipeCampeonatoChanged();
				}
			}
		}
		
		[Column(Storage="_idEquipeCampeonato", DbType="Int NOT NULL")]
		public int idEquipeCampeonato
		{
			get
			{
				return this._idEquipeCampeonato;
			}
			set
			{
				if ((this._idEquipeCampeonato != value))
				{
					if (this._Kart_Equipe_Campeonato.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEquipeCampeonatoChanging(value);
					this.SendPropertyChanging();
					this._idEquipeCampeonato = value;
					this.SendPropertyChanged("idEquipeCampeonato");
					this.OnidEquipeCampeonatoChanged();
				}
			}
		}
		
		[Column(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_dtCriacao", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtCriacao
		{
			get
			{
				return this._dtCriacao;
			}
			set
			{
				if ((this._dtCriacao != value))
				{
					this.OndtCriacaoChanging(value);
					this.SendPropertyChanging();
					this._dtCriacao = value;
					this.SendPropertyChanged("dtCriacao");
					this.OndtCriacaoChanged();
				}
			}
		}
		
		[Association(Name="Kart_Equipe_Campeonato_Kart_Usuario_Equipe_Campeonato", Storage="_Kart_Equipe_Campeonato", ThisKey="idEquipeCampeonato", OtherKey="idEquipeCampeonato", IsForeignKey=true)]
		public Kart_Equipe_Campeonato Kart_Equipe_Campeonato
		{
			get
			{
				return this._Kart_Equipe_Campeonato.Entity;
			}
			set
			{
				Kart_Equipe_Campeonato previousValue = this._Kart_Equipe_Campeonato.Entity;
				if (((previousValue != value) 
							|| (this._Kart_Equipe_Campeonato.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kart_Equipe_Campeonato.Entity = null;
						previousValue.Kart_Usuario_Equipe_Campeonatos.Remove(this);
					}
					this._Kart_Equipe_Campeonato.Entity = value;
					if ((value != null))
					{
						value.Kart_Usuario_Equipe_Campeonatos.Add(this);
						this._idEquipeCampeonato = value.idEquipeCampeonato;
					}
					else
					{
						this._idEquipeCampeonato = default(int);
					}
					this.SendPropertyChanged("Kart_Equipe_Campeonato");
				}
			}
		}
		
		[Association(Name="Usuario_Kart_Usuario_Equipe_Campeonato", Storage="_Usuario", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Kart_Usuario_Equipe_Campeonatos.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Kart_Usuario_Equipe_Campeonatos.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="afonsoftcombr.Kart_Usuario_Grupo")]
	public partial class Kart_Usuario_Grupo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idGrupoUsuario;
		
		private int _idGrupo;
		
		private int _idUsuario;
		
		private System.Nullable<bool> _Admin;
		
		private System.Nullable<bool> _Aprovado;
		
		private System.Nullable<System.DateTime> _dtCriacao;
		
		private EntityRef<Kart_Grupo> _Kart_Grupo;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGrupoUsuarioChanging(int value);
    partial void OnidGrupoUsuarioChanged();
    partial void OnidGrupoChanging(int value);
    partial void OnidGrupoChanged();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnAdminChanging(System.Nullable<bool> value);
    partial void OnAdminChanged();
    partial void OnAprovadoChanging(System.Nullable<bool> value);
    partial void OnAprovadoChanged();
    partial void OndtCriacaoChanging(System.Nullable<System.DateTime> value);
    partial void OndtCriacaoChanged();
    #endregion
		
		public Kart_Usuario_Grupo()
		{
			this._Kart_Grupo = default(EntityRef<Kart_Grupo>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_idGrupoUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idGrupoUsuario
		{
			get
			{
				return this._idGrupoUsuario;
			}
			set
			{
				if ((this._idGrupoUsuario != value))
				{
					this.OnidGrupoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idGrupoUsuario = value;
					this.SendPropertyChanged("idGrupoUsuario");
					this.OnidGrupoUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_idGrupo", DbType="Int NOT NULL")]
		public int idGrupo
		{
			get
			{
				return this._idGrupo;
			}
			set
			{
				if ((this._idGrupo != value))
				{
					if (this._Kart_Grupo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGrupoChanging(value);
					this.SendPropertyChanging();
					this._idGrupo = value;
					this.SendPropertyChanged("idGrupo");
					this.OnidGrupoChanged();
				}
			}
		}
		
		[Column(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_Admin", DbType="Bit")]
		public System.Nullable<bool> Admin
		{
			get
			{
				return this._Admin;
			}
			set
			{
				if ((this._Admin != value))
				{
					this.OnAdminChanging(value);
					this.SendPropertyChanging();
					this._Admin = value;
					this.SendPropertyChanged("Admin");
					this.OnAdminChanged();
				}
			}
		}
		
		[Column(Storage="_Aprovado", DbType="Bit")]
		public System.Nullable<bool> Aprovado
		{
			get
			{
				return this._Aprovado;
			}
			set
			{
				if ((this._Aprovado != value))
				{
					this.OnAprovadoChanging(value);
					this.SendPropertyChanging();
					this._Aprovado = value;
					this.SendPropertyChanged("Aprovado");
					this.OnAprovadoChanged();
				}
			}
		}
		
		[Column(Storage="_dtCriacao", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtCriacao
		{
			get
			{
				return this._dtCriacao;
			}
			set
			{
				if ((this._dtCriacao != value))
				{
					this.OndtCriacaoChanging(value);
					this.SendPropertyChanging();
					this._dtCriacao = value;
					this.SendPropertyChanged("dtCriacao");
					this.OndtCriacaoChanged();
				}
			}
		}
		
		[Association(Name="Kart_Grupo_Kart_Usuario_Grupo", Storage="_Kart_Grupo", ThisKey="idGrupo", OtherKey="idGrupo", IsForeignKey=true)]
		public Kart_Grupo Kart_Grupo
		{
			get
			{
				return this._Kart_Grupo.Entity;
			}
			set
			{
				Kart_Grupo previousValue = this._Kart_Grupo.Entity;
				if (((previousValue != value) 
							|| (this._Kart_Grupo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kart_Grupo.Entity = null;
						previousValue.Kart_Usuario_Grupos.Remove(this);
					}
					this._Kart_Grupo.Entity = value;
					if ((value != null))
					{
						value.Kart_Usuario_Grupos.Add(this);
						this._idGrupo = value.idGrupo;
					}
					else
					{
						this._idGrupo = default(int);
					}
					this.SendPropertyChanged("Kart_Grupo");
				}
			}
		}
		
		[Association(Name="Usuario_Kart_Usuario_Grupo", Storage="_Usuario", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Kart_Usuario_Grupos.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Kart_Usuario_Grupos.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="afonsoftcombr.View_Kart_Equipe_Pontos_Campeonato")]
	public partial class View_Kart_Equipe_Pontos_Campeonato
	{
		
		private int _idEquipeCampeonato;
		
		private string _Equipe;
		
		private string _Sigla;
		
		private System.Nullable<int> _Pontos;
		
		private string _Grupo;
		
		private string _Campeonato;
		
		private int _idCampeonato;
		
		private int _idGrupo;
		
		public View_Kart_Equipe_Pontos_Campeonato()
		{
		}
		
		[Column(Storage="_idEquipeCampeonato", DbType="Int NOT NULL")]
		public int idEquipeCampeonato
		{
			get
			{
				return this._idEquipeCampeonato;
			}
			set
			{
				if ((this._idEquipeCampeonato != value))
				{
					this._idEquipeCampeonato = value;
				}
			}
		}
		
		[Column(Storage="_Equipe", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Equipe
		{
			get
			{
				return this._Equipe;
			}
			set
			{
				if ((this._Equipe != value))
				{
					this._Equipe = value;
				}
			}
		}
		
		[Column(Storage="_Sigla", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sigla
		{
			get
			{
				return this._Sigla;
			}
			set
			{
				if ((this._Sigla != value))
				{
					this._Sigla = value;
				}
			}
		}
		
		[Column(Storage="_Pontos", DbType="Int")]
		public System.Nullable<int> Pontos
		{
			get
			{
				return this._Pontos;
			}
			set
			{
				if ((this._Pontos != value))
				{
					this._Pontos = value;
				}
			}
		}
		
		[Column(Storage="_Grupo", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Grupo
		{
			get
			{
				return this._Grupo;
			}
			set
			{
				if ((this._Grupo != value))
				{
					this._Grupo = value;
				}
			}
		}
		
		[Column(Storage="_Campeonato", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Campeonato
		{
			get
			{
				return this._Campeonato;
			}
			set
			{
				if ((this._Campeonato != value))
				{
					this._Campeonato = value;
				}
			}
		}
		
		[Column(Storage="_idCampeonato", DbType="Int NOT NULL")]
		public int idCampeonato
		{
			get
			{
				return this._idCampeonato;
			}
			set
			{
				if ((this._idCampeonato != value))
				{
					this._idCampeonato = value;
				}
			}
		}
		
		[Column(Storage="_idGrupo", DbType="Int NOT NULL")]
		public int idGrupo
		{
			get
			{
				return this._idGrupo;
			}
			set
			{
				if ((this._idGrupo != value))
				{
					this._idGrupo = value;
				}
			}
		}
	}
	
	[Table(Name="afonsoftcombr.View_Kart_Usuario_Pontos_Grupo")]
	public partial class View_Kart_Usuario_Pontos_Grupo
	{
		
		private int _idUsuario;
		
		private string _Nome;
		
		private System.Nullable<int> _Pontos;
		
		private string _Grupo;
		
		private int _idGrupo;
		
		public View_Kart_Usuario_Pontos_Grupo()
		{
		}
		
		[Column(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this._idUsuario = value;
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this._Nome = value;
				}
			}
		}
		
		[Column(Storage="_Pontos", DbType="Int")]
		public System.Nullable<int> Pontos
		{
			get
			{
				return this._Pontos;
			}
			set
			{
				if ((this._Pontos != value))
				{
					this._Pontos = value;
				}
			}
		}
		
		[Column(Storage="_Grupo", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Grupo
		{
			get
			{
				return this._Grupo;
			}
			set
			{
				if ((this._Grupo != value))
				{
					this._Grupo = value;
				}
			}
		}
		
		[Column(Storage="_idGrupo", DbType="Int NOT NULL")]
		public int idGrupo
		{
			get
			{
				return this._idGrupo;
			}
			set
			{
				if ((this._idGrupo != value))
				{
					this._idGrupo = value;
				}
			}
		}
	}
	
	[Table(Name="afonsoftcombr.View_Kart_Usuario_Historico")]
	public partial class View_Kart_Usuario_Historico
	{
		
		private int _idUsuario;
		
		private string _Nome;
		
		private System.Nullable<int> _Pontos;
		
		private System.Nullable<int> _Provas;
		
		private int _Vitorias;
		
		private int _Podios;
		
		public View_Kart_Usuario_Historico()
		{
		}
		
		[Column(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this._idUsuario = value;
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this._Nome = value;
				}
			}
		}
		
		[Column(Storage="_Pontos", DbType="Int")]
		public System.Nullable<int> Pontos
		{
			get
			{
				return this._Pontos;
			}
			set
			{
				if ((this._Pontos != value))
				{
					this._Pontos = value;
				}
			}
		}
		
		[Column(Storage="_Provas", DbType="Int")]
		public System.Nullable<int> Provas
		{
			get
			{
				return this._Provas;
			}
			set
			{
				if ((this._Provas != value))
				{
					this._Provas = value;
				}
			}
		}
		
		[Column(Storage="_Vitorias", DbType="Int NOT NULL")]
		public int Vitorias
		{
			get
			{
				return this._Vitorias;
			}
			set
			{
				if ((this._Vitorias != value))
				{
					this._Vitorias = value;
				}
			}
		}
		
		[Column(Storage="_Podios", DbType="Int NOT NULL")]
		public int Podios
		{
			get
			{
				return this._Podios;
			}
			set
			{
				if ((this._Podios != value))
				{
					this._Podios = value;
				}
			}
		}
	}
	
	[Table(Name="afonsoftcombr.View_Kart_Usuario_Pontos_Campeonato")]
	public partial class View_Kart_Usuario_Pontos_Campeonato
	{
		
		private int _idUsuario;
		
		private string _Nome;
		
		private System.Nullable<int> _Pontos;
		
		private string _Grupo;
		
		private string _Campeonato;
		
		private int _idCampeonato;
		
		private int _idGrupo;
		
		public View_Kart_Usuario_Pontos_Campeonato()
		{
		}
		
		[Column(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this._idUsuario = value;
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this._Nome = value;
				}
			}
		}
		
		[Column(Storage="_Pontos", DbType="Int")]
		public System.Nullable<int> Pontos
		{
			get
			{
				return this._Pontos;
			}
			set
			{
				if ((this._Pontos != value))
				{
					this._Pontos = value;
				}
			}
		}
		
		[Column(Storage="_Grupo", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Grupo
		{
			get
			{
				return this._Grupo;
			}
			set
			{
				if ((this._Grupo != value))
				{
					this._Grupo = value;
				}
			}
		}
		
		[Column(Storage="_Campeonato", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Campeonato
		{
			get
			{
				return this._Campeonato;
			}
			set
			{
				if ((this._Campeonato != value))
				{
					this._Campeonato = value;
				}
			}
		}
		
		[Column(Storage="_idCampeonato", DbType="Int NOT NULL")]
		public int idCampeonato
		{
			get
			{
				return this._idCampeonato;
			}
			set
			{
				if ((this._idCampeonato != value))
				{
					this._idCampeonato = value;
				}
			}
		}
		
		[Column(Storage="_idGrupo", DbType="Int NOT NULL")]
		public int idGrupo
		{
			get
			{
				return this._idGrupo;
			}
			set
			{
				if ((this._idGrupo != value))
				{
					this._idGrupo = value;
				}
			}
		}
	}
	
	[Table(Name="afonsoftcombr.Kart_Resultado_Calendario")]
	public partial class Kart_Resultado_Calendario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idResultado;
		
		private int _idCalendario;
		
		private int _Pos;
		
		private int _idUsuario;
		
		private int _idEquipe;
		
		private int _tempoHoras;
		
		private int _tempoMinutos;
		
		private int _tempoSegundos;
		
		private int _tempoMilisegundos;
		
		private int _Ponto;
		
		private int _Voltas;
		
		private System.Nullable<System.DateTime> _dtCriacao;
		
		private EntityRef<Kart_Calendario_Campeonato> _Kart_Calendario_Campeonato;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidResultadoChanging(int value);
    partial void OnidResultadoChanged();
    partial void OnidCalendarioChanging(int value);
    partial void OnidCalendarioChanged();
    partial void OnPosChanging(int value);
    partial void OnPosChanged();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnidEquipeChanging(int value);
    partial void OnidEquipeChanged();
    partial void OntempoHorasChanging(int value);
    partial void OntempoHorasChanged();
    partial void OntempoMinutosChanging(int value);
    partial void OntempoMinutosChanged();
    partial void OntempoSegundosChanging(int value);
    partial void OntempoSegundosChanged();
    partial void OntempoMilisegundosChanging(int value);
    partial void OntempoMilisegundosChanged();
    partial void OnPontoChanging(int value);
    partial void OnPontoChanged();
    partial void OnVoltasChanging(int value);
    partial void OnVoltasChanged();
    partial void OndtCriacaoChanging(System.Nullable<System.DateTime> value);
    partial void OndtCriacaoChanged();
    #endregion
		
		public Kart_Resultado_Calendario()
		{
			this._Kart_Calendario_Campeonato = default(EntityRef<Kart_Calendario_Campeonato>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_idResultado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idResultado
		{
			get
			{
				return this._idResultado;
			}
			set
			{
				if ((this._idResultado != value))
				{
					this.OnidResultadoChanging(value);
					this.SendPropertyChanging();
					this._idResultado = value;
					this.SendPropertyChanged("idResultado");
					this.OnidResultadoChanged();
				}
			}
		}
		
		[Column(Storage="_idCalendario", DbType="Int NOT NULL")]
		public int idCalendario
		{
			get
			{
				return this._idCalendario;
			}
			set
			{
				if ((this._idCalendario != value))
				{
					if (this._Kart_Calendario_Campeonato.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCalendarioChanging(value);
					this.SendPropertyChanging();
					this._idCalendario = value;
					this.SendPropertyChanged("idCalendario");
					this.OnidCalendarioChanged();
				}
			}
		}
		
		[Column(Storage="_Pos", DbType="Int NOT NULL")]
		public int Pos
		{
			get
			{
				return this._Pos;
			}
			set
			{
				if ((this._Pos != value))
				{
					this.OnPosChanging(value);
					this.SendPropertyChanging();
					this._Pos = value;
					this.SendPropertyChanged("Pos");
					this.OnPosChanged();
				}
			}
		}
		
		[Column(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_idEquipe", DbType="Int NOT NULL")]
		public int idEquipe
		{
			get
			{
				return this._idEquipe;
			}
			set
			{
				if ((this._idEquipe != value))
				{
					this.OnidEquipeChanging(value);
					this.SendPropertyChanging();
					this._idEquipe = value;
					this.SendPropertyChanged("idEquipe");
					this.OnidEquipeChanged();
				}
			}
		}
		
		[Column(Storage="_tempoHoras", DbType="Int NOT NULL")]
		public int tempoHoras
		{
			get
			{
				return this._tempoHoras;
			}
			set
			{
				if ((this._tempoHoras != value))
				{
					this.OntempoHorasChanging(value);
					this.SendPropertyChanging();
					this._tempoHoras = value;
					this.SendPropertyChanged("tempoHoras");
					this.OntempoHorasChanged();
				}
			}
		}
		
		[Column(Storage="_tempoMinutos", DbType="Int NOT NULL")]
		public int tempoMinutos
		{
			get
			{
				return this._tempoMinutos;
			}
			set
			{
				if ((this._tempoMinutos != value))
				{
					this.OntempoMinutosChanging(value);
					this.SendPropertyChanging();
					this._tempoMinutos = value;
					this.SendPropertyChanged("tempoMinutos");
					this.OntempoMinutosChanged();
				}
			}
		}
		
		[Column(Storage="_tempoSegundos", DbType="Int NOT NULL")]
		public int tempoSegundos
		{
			get
			{
				return this._tempoSegundos;
			}
			set
			{
				if ((this._tempoSegundos != value))
				{
					this.OntempoSegundosChanging(value);
					this.SendPropertyChanging();
					this._tempoSegundos = value;
					this.SendPropertyChanged("tempoSegundos");
					this.OntempoSegundosChanged();
				}
			}
		}
		
		[Column(Storage="_tempoMilisegundos", DbType="Int NOT NULL")]
		public int tempoMilisegundos
		{
			get
			{
				return this._tempoMilisegundos;
			}
			set
			{
				if ((this._tempoMilisegundos != value))
				{
					this.OntempoMilisegundosChanging(value);
					this.SendPropertyChanging();
					this._tempoMilisegundos = value;
					this.SendPropertyChanged("tempoMilisegundos");
					this.OntempoMilisegundosChanged();
				}
			}
		}
		
		[Column(Storage="_Ponto", DbType="Int NOT NULL")]
		public int Ponto
		{
			get
			{
				return this._Ponto;
			}
			set
			{
				if ((this._Ponto != value))
				{
					this.OnPontoChanging(value);
					this.SendPropertyChanging();
					this._Ponto = value;
					this.SendPropertyChanged("Ponto");
					this.OnPontoChanged();
				}
			}
		}
		
		[Column(Storage="_Voltas", DbType="Int NOT NULL")]
		public int Voltas
		{
			get
			{
				return this._Voltas;
			}
			set
			{
				if ((this._Voltas != value))
				{
					this.OnVoltasChanging(value);
					this.SendPropertyChanging();
					this._Voltas = value;
					this.SendPropertyChanged("Voltas");
					this.OnVoltasChanged();
				}
			}
		}
		
		[Column(Storage="_dtCriacao", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtCriacao
		{
			get
			{
				return this._dtCriacao;
			}
			set
			{
				if ((this._dtCriacao != value))
				{
					this.OndtCriacaoChanging(value);
					this.SendPropertyChanging();
					this._dtCriacao = value;
					this.SendPropertyChanged("dtCriacao");
					this.OndtCriacaoChanged();
				}
			}
		}
		
		[Association(Name="Kart_Calendario_Campeonato_Kart_Resultado_Calendario", Storage="_Kart_Calendario_Campeonato", ThisKey="idCalendario", OtherKey="idCalendario", IsForeignKey=true)]
		public Kart_Calendario_Campeonato Kart_Calendario_Campeonato
		{
			get
			{
				return this._Kart_Calendario_Campeonato.Entity;
			}
			set
			{
				Kart_Calendario_Campeonato previousValue = this._Kart_Calendario_Campeonato.Entity;
				if (((previousValue != value) 
							|| (this._Kart_Calendario_Campeonato.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kart_Calendario_Campeonato.Entity = null;
						previousValue.Kart_Resultado_Calendarios.Remove(this);
					}
					this._Kart_Calendario_Campeonato.Entity = value;
					if ((value != null))
					{
						value.Kart_Resultado_Calendarios.Add(this);
						this._idCalendario = value.idCalendario;
					}
					else
					{
						this._idCalendario = default(int);
					}
					this.SendPropertyChanged("Kart_Calendario_Campeonato");
				}
			}
		}
		
		[Association(Name="Usuario_Kart_Resultado_Calendario", Storage="_Usuario", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Kart_Resultado_Calendarios.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Kart_Resultado_Calendarios.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="afonsoftcombr.View_Equipe_Usuario")]
	public partial class View_Equipe_Usuario
	{
		
		private int _idUsuario;
		
		private string _NomeEquipe;
		
		private string _Sigla;
		
		private int _idEquipeCampeonato;
		
		private int _idCampeonato;
		
		public View_Equipe_Usuario()
		{
		}
		
		[Column(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this._idUsuario = value;
				}
			}
		}
		
		[Column(Storage="_NomeEquipe", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string NomeEquipe
		{
			get
			{
				return this._NomeEquipe;
			}
			set
			{
				if ((this._NomeEquipe != value))
				{
					this._NomeEquipe = value;
				}
			}
		}
		
		[Column(Storage="_Sigla", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sigla
		{
			get
			{
				return this._Sigla;
			}
			set
			{
				if ((this._Sigla != value))
				{
					this._Sigla = value;
				}
			}
		}
		
		[Column(Storage="_idEquipeCampeonato", DbType="Int NOT NULL")]
		public int idEquipeCampeonato
		{
			get
			{
				return this._idEquipeCampeonato;
			}
			set
			{
				if ((this._idEquipeCampeonato != value))
				{
					this._idEquipeCampeonato = value;
				}
			}
		}
		
		[Column(Storage="_idCampeonato", DbType="Int NOT NULL")]
		public int idCampeonato
		{
			get
			{
				return this._idCampeonato;
			}
			set
			{
				if ((this._idCampeonato != value))
				{
					this._idCampeonato = value;
				}
			}
		}
	}
	
	[Table(Name="afonsoftcombr.Usuarios")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuario;
		
		private string _Nome;
		
		private string _Apelido;
		
		private string _Email;
		
		private string _Senha;
		
		private System.Nullable<char> _Sexo;
		
		private System.Nullable<decimal> _Peso;
		
		private System.Nullable<System.DateTime> _DtNascimento;
		
		private System.Nullable<bool> _MostarInfo;
		
		private System.Nullable<decimal> _Altura;
		
		private string _Telefone;
		
		private string _Celular;
		
		private System.Data.Linq.Binary _Foto;
		
		private string _Cidade;
		
		private string _Estado;
		
		private string _Endereco;
		
		private string _Perfil_Facebook;
		
		private string _Perfil_Twitter;
		
		private string _Perfil_Plus;
		
		private string _Perfil_Outros;
		
		private string _Obs;
		
		private System.Nullable<System.DateTime> _dtCriacao;
		
		private System.Nullable<bool> _Ativo;
		
		private EntitySet<Kart_Grid_Calendario> _Kart_Grid_Calendarios;
		
		private EntitySet<Kart_Grupo> _Kart_Grupos;
		
		private EntitySet<Kart_Usuario_Equipe_Campeonato> _Kart_Usuario_Equipe_Campeonatos;
		
		private EntitySet<Kart_Usuario_Grupo> _Kart_Usuario_Grupos;
		
		private EntitySet<Kart_Resultado_Calendario> _Kart_Resultado_Calendarios;
		
		private EntitySet<Kart_log_erro> _Kart_log_erros;
		
		private EntitySet<Kart_Noticias_Grupo> _Kart_Noticias_Grupos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnApelidoChanging(string value);
    partial void OnApelidoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSenhaChanging(string value);
    partial void OnSenhaChanged();
    partial void OnSexoChanging(System.Nullable<char> value);
    partial void OnSexoChanged();
    partial void OnPesoChanging(System.Nullable<decimal> value);
    partial void OnPesoChanged();
    partial void OnDtNascimentoChanging(System.Nullable<System.DateTime> value);
    partial void OnDtNascimentoChanged();
    partial void OnMostarInfoChanging(System.Nullable<bool> value);
    partial void OnMostarInfoChanged();
    partial void OnAlturaChanging(System.Nullable<decimal> value);
    partial void OnAlturaChanged();
    partial void OnTelefoneChanging(string value);
    partial void OnTelefoneChanged();
    partial void OnCelularChanging(string value);
    partial void OnCelularChanged();
    partial void OnFotoChanging(System.Data.Linq.Binary value);
    partial void OnFotoChanged();
    partial void OnCidadeChanging(string value);
    partial void OnCidadeChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnEnderecoChanging(string value);
    partial void OnEnderecoChanged();
    partial void OnPerfil_FacebookChanging(string value);
    partial void OnPerfil_FacebookChanged();
    partial void OnPerfil_TwitterChanging(string value);
    partial void OnPerfil_TwitterChanged();
    partial void OnPerfil_PlusChanging(string value);
    partial void OnPerfil_PlusChanged();
    partial void OnPerfil_OutrosChanging(string value);
    partial void OnPerfil_OutrosChanged();
    partial void OnObsChanging(string value);
    partial void OnObsChanged();
    partial void OndtCriacaoChanging(System.Nullable<System.DateTime> value);
    partial void OndtCriacaoChanged();
    partial void OnAtivoChanging(System.Nullable<bool> value);
    partial void OnAtivoChanged();
    #endregion
		
		public Usuario()
		{
			this._Kart_Grid_Calendarios = new EntitySet<Kart_Grid_Calendario>(new Action<Kart_Grid_Calendario>(this.attach_Kart_Grid_Calendarios), new Action<Kart_Grid_Calendario>(this.detach_Kart_Grid_Calendarios));
			this._Kart_Grupos = new EntitySet<Kart_Grupo>(new Action<Kart_Grupo>(this.attach_Kart_Grupos), new Action<Kart_Grupo>(this.detach_Kart_Grupos));
			this._Kart_Usuario_Equipe_Campeonatos = new EntitySet<Kart_Usuario_Equipe_Campeonato>(new Action<Kart_Usuario_Equipe_Campeonato>(this.attach_Kart_Usuario_Equipe_Campeonatos), new Action<Kart_Usuario_Equipe_Campeonato>(this.detach_Kart_Usuario_Equipe_Campeonatos));
			this._Kart_Usuario_Grupos = new EntitySet<Kart_Usuario_Grupo>(new Action<Kart_Usuario_Grupo>(this.attach_Kart_Usuario_Grupos), new Action<Kart_Usuario_Grupo>(this.detach_Kart_Usuario_Grupos));
			this._Kart_Resultado_Calendarios = new EntitySet<Kart_Resultado_Calendario>(new Action<Kart_Resultado_Calendario>(this.attach_Kart_Resultado_Calendarios), new Action<Kart_Resultado_Calendario>(this.detach_Kart_Resultado_Calendarios));
			this._Kart_log_erros = new EntitySet<Kart_log_erro>(new Action<Kart_log_erro>(this.attach_Kart_log_erros), new Action<Kart_log_erro>(this.detach_Kart_log_erros));
			this._Kart_Noticias_Grupos = new EntitySet<Kart_Noticias_Grupo>(new Action<Kart_Noticias_Grupo>(this.attach_Kart_Noticias_Grupos), new Action<Kart_Noticias_Grupo>(this.detach_Kart_Noticias_Grupos));
			OnCreated();
		}
		
		[Column(Storage="_idUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_Apelido", DbType="NChar(30)")]
		public string Apelido
		{
			get
			{
				return this._Apelido;
			}
			set
			{
				if ((this._Apelido != value))
				{
					this.OnApelidoChanging(value);
					this.SendPropertyChanging();
					this._Apelido = value;
					this.SendPropertyChanged("Apelido");
					this.OnApelidoChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Senha", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Senha
		{
			get
			{
				return this._Senha;
			}
			set
			{
				if ((this._Senha != value))
				{
					this.OnSenhaChanging(value);
					this.SendPropertyChanging();
					this._Senha = value;
					this.SendPropertyChanged("Senha");
					this.OnSenhaChanged();
				}
			}
		}
		
		[Column(Storage="_Sexo", DbType="NChar(1)")]
		public System.Nullable<char> Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[Column(Storage="_Peso", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Peso
		{
			get
			{
				return this._Peso;
			}
			set
			{
				if ((this._Peso != value))
				{
					this.OnPesoChanging(value);
					this.SendPropertyChanging();
					this._Peso = value;
					this.SendPropertyChanged("Peso");
					this.OnPesoChanged();
				}
			}
		}
		
		[Column(Storage="_DtNascimento", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DtNascimento
		{
			get
			{
				return this._DtNascimento;
			}
			set
			{
				if ((this._DtNascimento != value))
				{
					this.OnDtNascimentoChanging(value);
					this.SendPropertyChanging();
					this._DtNascimento = value;
					this.SendPropertyChanged("DtNascimento");
					this.OnDtNascimentoChanged();
				}
			}
		}
		
		[Column(Storage="_MostarInfo", DbType="Bit")]
		public System.Nullable<bool> MostarInfo
		{
			get
			{
				return this._MostarInfo;
			}
			set
			{
				if ((this._MostarInfo != value))
				{
					this.OnMostarInfoChanging(value);
					this.SendPropertyChanging();
					this._MostarInfo = value;
					this.SendPropertyChanged("MostarInfo");
					this.OnMostarInfoChanged();
				}
			}
		}
		
		[Column(Storage="_Altura", DbType="Decimal(3,2)")]
		public System.Nullable<decimal> Altura
		{
			get
			{
				return this._Altura;
			}
			set
			{
				if ((this._Altura != value))
				{
					this.OnAlturaChanging(value);
					this.SendPropertyChanging();
					this._Altura = value;
					this.SendPropertyChanged("Altura");
					this.OnAlturaChanged();
				}
			}
		}
		
		[Column(Storage="_Telefone", DbType="NChar(50)")]
		public string Telefone
		{
			get
			{
				return this._Telefone;
			}
			set
			{
				if ((this._Telefone != value))
				{
					this.OnTelefoneChanging(value);
					this.SendPropertyChanging();
					this._Telefone = value;
					this.SendPropertyChanged("Telefone");
					this.OnTelefoneChanged();
				}
			}
		}
		
		[Column(Storage="_Celular", DbType="NChar(50)")]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[Column(Storage="_Foto", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Foto
		{
			get
			{
				return this._Foto;
			}
			set
			{
				if ((this._Foto != value))
				{
					this.OnFotoChanging(value);
					this.SendPropertyChanging();
					this._Foto = value;
					this.SendPropertyChanged("Foto");
					this.OnFotoChanged();
				}
			}
		}
		
		[Column(Storage="_Cidade", DbType="NVarChar(200)")]
		public string Cidade
		{
			get
			{
				return this._Cidade;
			}
			set
			{
				if ((this._Cidade != value))
				{
					this.OnCidadeChanging(value);
					this.SendPropertyChanging();
					this._Cidade = value;
					this.SendPropertyChanged("Cidade");
					this.OnCidadeChanged();
				}
			}
		}
		
		[Column(Storage="_Estado", DbType="NChar(2)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[Column(Storage="_Endereco", DbType="NVarChar(MAX)")]
		public string Endereco
		{
			get
			{
				return this._Endereco;
			}
			set
			{
				if ((this._Endereco != value))
				{
					this.OnEnderecoChanging(value);
					this.SendPropertyChanging();
					this._Endereco = value;
					this.SendPropertyChanged("Endereco");
					this.OnEnderecoChanged();
				}
			}
		}
		
		[Column(Storage="_Perfil_Facebook", DbType="NVarChar(200)")]
		public string Perfil_Facebook
		{
			get
			{
				return this._Perfil_Facebook;
			}
			set
			{
				if ((this._Perfil_Facebook != value))
				{
					this.OnPerfil_FacebookChanging(value);
					this.SendPropertyChanging();
					this._Perfil_Facebook = value;
					this.SendPropertyChanged("Perfil_Facebook");
					this.OnPerfil_FacebookChanged();
				}
			}
		}
		
		[Column(Storage="_Perfil_Twitter", DbType="NVarChar(200)")]
		public string Perfil_Twitter
		{
			get
			{
				return this._Perfil_Twitter;
			}
			set
			{
				if ((this._Perfil_Twitter != value))
				{
					this.OnPerfil_TwitterChanging(value);
					this.SendPropertyChanging();
					this._Perfil_Twitter = value;
					this.SendPropertyChanged("Perfil_Twitter");
					this.OnPerfil_TwitterChanged();
				}
			}
		}
		
		[Column(Storage="_Perfil_Plus", DbType="NVarChar(200)")]
		public string Perfil_Plus
		{
			get
			{
				return this._Perfil_Plus;
			}
			set
			{
				if ((this._Perfil_Plus != value))
				{
					this.OnPerfil_PlusChanging(value);
					this.SendPropertyChanging();
					this._Perfil_Plus = value;
					this.SendPropertyChanged("Perfil_Plus");
					this.OnPerfil_PlusChanged();
				}
			}
		}
		
		[Column(Storage="_Perfil_Outros", DbType="NVarChar(200)")]
		public string Perfil_Outros
		{
			get
			{
				return this._Perfil_Outros;
			}
			set
			{
				if ((this._Perfil_Outros != value))
				{
					this.OnPerfil_OutrosChanging(value);
					this.SendPropertyChanging();
					this._Perfil_Outros = value;
					this.SendPropertyChanged("Perfil_Outros");
					this.OnPerfil_OutrosChanged();
				}
			}
		}
		
		[Column(Storage="_Obs", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Obs
		{
			get
			{
				return this._Obs;
			}
			set
			{
				if ((this._Obs != value))
				{
					this.OnObsChanging(value);
					this.SendPropertyChanging();
					this._Obs = value;
					this.SendPropertyChanged("Obs");
					this.OnObsChanged();
				}
			}
		}
		
		[Column(Storage="_dtCriacao", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtCriacao
		{
			get
			{
				return this._dtCriacao;
			}
			set
			{
				if ((this._dtCriacao != value))
				{
					this.OndtCriacaoChanging(value);
					this.SendPropertyChanging();
					this._dtCriacao = value;
					this.SendPropertyChanged("dtCriacao");
					this.OndtCriacaoChanged();
				}
			}
		}
		
		[Column(Storage="_Ativo", DbType="Bit")]
		public System.Nullable<bool> Ativo
		{
			get
			{
				return this._Ativo;
			}
			set
			{
				if ((this._Ativo != value))
				{
					this.OnAtivoChanging(value);
					this.SendPropertyChanging();
					this._Ativo = value;
					this.SendPropertyChanged("Ativo");
					this.OnAtivoChanged();
				}
			}
		}
		
		[Association(Name="Usuario_Kart_Grid_Calendario", Storage="_Kart_Grid_Calendarios", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<Kart_Grid_Calendario> Kart_Grid_Calendarios
		{
			get
			{
				return this._Kart_Grid_Calendarios;
			}
			set
			{
				this._Kart_Grid_Calendarios.Assign(value);
			}
		}
		
		[Association(Name="Usuario_Kart_Grupo", Storage="_Kart_Grupos", ThisKey="idUsuario", OtherKey="Id_Usuario_Lider")]
		public EntitySet<Kart_Grupo> Kart_Grupos
		{
			get
			{
				return this._Kart_Grupos;
			}
			set
			{
				this._Kart_Grupos.Assign(value);
			}
		}
		
		[Association(Name="Usuario_Kart_Usuario_Equipe_Campeonato", Storage="_Kart_Usuario_Equipe_Campeonatos", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<Kart_Usuario_Equipe_Campeonato> Kart_Usuario_Equipe_Campeonatos
		{
			get
			{
				return this._Kart_Usuario_Equipe_Campeonatos;
			}
			set
			{
				this._Kart_Usuario_Equipe_Campeonatos.Assign(value);
			}
		}
		
		[Association(Name="Usuario_Kart_Usuario_Grupo", Storage="_Kart_Usuario_Grupos", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<Kart_Usuario_Grupo> Kart_Usuario_Grupos
		{
			get
			{
				return this._Kart_Usuario_Grupos;
			}
			set
			{
				this._Kart_Usuario_Grupos.Assign(value);
			}
		}
		
		[Association(Name="Usuario_Kart_Resultado_Calendario", Storage="_Kart_Resultado_Calendarios", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<Kart_Resultado_Calendario> Kart_Resultado_Calendarios
		{
			get
			{
				return this._Kart_Resultado_Calendarios;
			}
			set
			{
				this._Kart_Resultado_Calendarios.Assign(value);
			}
		}
		
		[Association(Name="Usuario_Kart_log_erro", Storage="_Kart_log_erros", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<Kart_log_erro> Kart_log_erros
		{
			get
			{
				return this._Kart_log_erros;
			}
			set
			{
				this._Kart_log_erros.Assign(value);
			}
		}
		
		[Association(Name="Usuario_Kart_Noticias_Grupo", Storage="_Kart_Noticias_Grupos", ThisKey="idUsuario", OtherKey="IdUsuario")]
		public EntitySet<Kart_Noticias_Grupo> Kart_Noticias_Grupos
		{
			get
			{
				return this._Kart_Noticias_Grupos;
			}
			set
			{
				this._Kart_Noticias_Grupos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kart_Grid_Calendarios(Kart_Grid_Calendario entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Kart_Grid_Calendarios(Kart_Grid_Calendario entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Kart_Grupos(Kart_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Kart_Grupos(Kart_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Kart_Usuario_Equipe_Campeonatos(Kart_Usuario_Equipe_Campeonato entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Kart_Usuario_Equipe_Campeonatos(Kart_Usuario_Equipe_Campeonato entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Kart_Usuario_Grupos(Kart_Usuario_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Kart_Usuario_Grupos(Kart_Usuario_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Kart_Resultado_Calendarios(Kart_Resultado_Calendario entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Kart_Resultado_Calendarios(Kart_Resultado_Calendario entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Kart_log_erros(Kart_log_erro entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Kart_log_erros(Kart_log_erro entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Kart_Noticias_Grupos(Kart_Noticias_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Kart_Noticias_Grupos(Kart_Noticias_Grupo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[Table(Name="afonsoftcombr.Kart_log_erro")]
	public partial class Kart_log_erro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idErro;
		
		private string _UserIP;
		
		private string _URL;
		
		private string _RawUrl;
		
		private string _QueryString;
		
		private string _UserAgent;
		
		private string _Referrer;
		
		private string _Mensagem;
		
		private string _Erro;
		
		private string _Keys;
		
		private string _StackTrace;
		
		private string _TargetSite;
		
		private string _Source;
		
		private System.Nullable<int> _idUsuario;
		
		private string _Page;
		
		private System.Nullable<System.DateTime> _dtErro;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidErroChanging(int value);
    partial void OnidErroChanged();
    partial void OnUserIPChanging(string value);
    partial void OnUserIPChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnRawUrlChanging(string value);
    partial void OnRawUrlChanged();
    partial void OnQueryStringChanging(string value);
    partial void OnQueryStringChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnReferrerChanging(string value);
    partial void OnReferrerChanged();
    partial void OnMensagemChanging(string value);
    partial void OnMensagemChanged();
    partial void OnErroChanging(string value);
    partial void OnErroChanged();
    partial void OnKeysChanging(string value);
    partial void OnKeysChanged();
    partial void OnStackTraceChanging(string value);
    partial void OnStackTraceChanged();
    partial void OnTargetSiteChanging(string value);
    partial void OnTargetSiteChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnidUsuarioChanging(System.Nullable<int> value);
    partial void OnidUsuarioChanged();
    partial void OnPageChanging(string value);
    partial void OnPageChanged();
    partial void OndtErroChanging(System.Nullable<System.DateTime> value);
    partial void OndtErroChanged();
    #endregion
		
		public Kart_log_erro()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_idErro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idErro
		{
			get
			{
				return this._idErro;
			}
			set
			{
				if ((this._idErro != value))
				{
					this.OnidErroChanging(value);
					this.SendPropertyChanging();
					this._idErro = value;
					this.SendPropertyChanged("idErro");
					this.OnidErroChanged();
				}
			}
		}
		
		[Column(Storage="_UserIP", DbType="NChar(20)")]
		public string UserIP
		{
			get
			{
				return this._UserIP;
			}
			set
			{
				if ((this._UserIP != value))
				{
					this.OnUserIPChanging(value);
					this.SendPropertyChanging();
					this._UserIP = value;
					this.SendPropertyChanged("UserIP");
					this.OnUserIPChanged();
				}
			}
		}
		
		[Column(Storage="_URL", DbType="NVarChar(MAX)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[Column(Storage="_RawUrl", DbType="NVarChar(MAX)")]
		public string RawUrl
		{
			get
			{
				return this._RawUrl;
			}
			set
			{
				if ((this._RawUrl != value))
				{
					this.OnRawUrlChanging(value);
					this.SendPropertyChanging();
					this._RawUrl = value;
					this.SendPropertyChanged("RawUrl");
					this.OnRawUrlChanged();
				}
			}
		}
		
		[Column(Storage="_QueryString", DbType="NVarChar(MAX)")]
		public string QueryString
		{
			get
			{
				return this._QueryString;
			}
			set
			{
				if ((this._QueryString != value))
				{
					this.OnQueryStringChanging(value);
					this.SendPropertyChanging();
					this._QueryString = value;
					this.SendPropertyChanged("QueryString");
					this.OnQueryStringChanged();
				}
			}
		}
		
		[Column(Storage="_UserAgent", DbType="NVarChar(MAX)")]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
		[Column(Storage="_Referrer", DbType="NVarChar(MAX)")]
		public string Referrer
		{
			get
			{
				return this._Referrer;
			}
			set
			{
				if ((this._Referrer != value))
				{
					this.OnReferrerChanging(value);
					this.SendPropertyChanging();
					this._Referrer = value;
					this.SendPropertyChanged("Referrer");
					this.OnReferrerChanged();
				}
			}
		}
		
		[Column(Storage="_Mensagem", DbType="NVarChar(MAX)")]
		public string Mensagem
		{
			get
			{
				return this._Mensagem;
			}
			set
			{
				if ((this._Mensagem != value))
				{
					this.OnMensagemChanging(value);
					this.SendPropertyChanging();
					this._Mensagem = value;
					this.SendPropertyChanged("Mensagem");
					this.OnMensagemChanged();
				}
			}
		}
		
		[Column(Storage="_Erro", DbType="NVarChar(MAX)")]
		public string Erro
		{
			get
			{
				return this._Erro;
			}
			set
			{
				if ((this._Erro != value))
				{
					this.OnErroChanging(value);
					this.SendPropertyChanging();
					this._Erro = value;
					this.SendPropertyChanged("Erro");
					this.OnErroChanged();
				}
			}
		}
		
		[Column(Storage="_Keys", DbType="NVarChar(MAX)")]
		public string Keys
		{
			get
			{
				return this._Keys;
			}
			set
			{
				if ((this._Keys != value))
				{
					this.OnKeysChanging(value);
					this.SendPropertyChanging();
					this._Keys = value;
					this.SendPropertyChanged("Keys");
					this.OnKeysChanged();
				}
			}
		}
		
		[Column(Storage="_StackTrace", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this.OnStackTraceChanging(value);
					this.SendPropertyChanging();
					this._StackTrace = value;
					this.SendPropertyChanged("StackTrace");
					this.OnStackTraceChanged();
				}
			}
		}
		
		[Column(Storage="_TargetSite", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TargetSite
		{
			get
			{
				return this._TargetSite;
			}
			set
			{
				if ((this._TargetSite != value))
				{
					this.OnTargetSiteChanging(value);
					this.SendPropertyChanging();
					this._TargetSite = value;
					this.SendPropertyChanged("TargetSite");
					this.OnTargetSiteChanged();
				}
			}
		}
		
		[Column(Storage="_Source", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[Column(Storage="_idUsuario", DbType="Int")]
		public System.Nullable<int> idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_Page", DbType="NVarChar(MAX)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this.OnPageChanging(value);
					this.SendPropertyChanging();
					this._Page = value;
					this.SendPropertyChanged("Page");
					this.OnPageChanged();
				}
			}
		}
		
		[Column(Storage="_dtErro", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtErro
		{
			get
			{
				return this._dtErro;
			}
			set
			{
				if ((this._dtErro != value))
				{
					this.OndtErroChanging(value);
					this.SendPropertyChanging();
					this._dtErro = value;
					this.SendPropertyChanged("dtErro");
					this.OndtErroChanged();
				}
			}
		}
		
		[Association(Name="Usuario_Kart_log_erro", Storage="_Usuario", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Kart_log_erros.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Kart_log_erros.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="afonsoftcombr.Kart_Noticias_Grupo")]
	public partial class Kart_Noticias_Grupo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idNoticias;
		
		private string _Titulo;
		
		private string _Noticia;
		
		private bool _Ativo;
		
		private System.Nullable<System.DateTime> _dtEvento;
		
		private System.Nullable<System.DateTime> _dtCriacao;
		
		private int _IdUsuario;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidNoticiasChanging(int value);
    partial void OnidNoticiasChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnNoticiaChanging(string value);
    partial void OnNoticiaChanged();
    partial void OnAtivoChanging(bool value);
    partial void OnAtivoChanged();
    partial void OndtEventoChanging(System.Nullable<System.DateTime> value);
    partial void OndtEventoChanged();
    partial void OndtCriacaoChanging(System.Nullable<System.DateTime> value);
    partial void OndtCriacaoChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    #endregion
		
		public Kart_Noticias_Grupo()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_idNoticias", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idNoticias
		{
			get
			{
				return this._idNoticias;
			}
			set
			{
				if ((this._idNoticias != value))
				{
					this.OnidNoticiasChanging(value);
					this.SendPropertyChanging();
					this._idNoticias = value;
					this.SendPropertyChanged("idNoticias");
					this.OnidNoticiasChanged();
				}
			}
		}
		
		[Column(Storage="_Titulo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[Column(Storage="_Noticia", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Noticia
		{
			get
			{
				return this._Noticia;
			}
			set
			{
				if ((this._Noticia != value))
				{
					this.OnNoticiaChanging(value);
					this.SendPropertyChanging();
					this._Noticia = value;
					this.SendPropertyChanged("Noticia");
					this.OnNoticiaChanged();
				}
			}
		}
		
		[Column(Storage="_Ativo", DbType="Bit NOT NULL")]
		public bool Ativo
		{
			get
			{
				return this._Ativo;
			}
			set
			{
				if ((this._Ativo != value))
				{
					this.OnAtivoChanging(value);
					this.SendPropertyChanging();
					this._Ativo = value;
					this.SendPropertyChanged("Ativo");
					this.OnAtivoChanged();
				}
			}
		}
		
		[Column(Storage="_dtEvento", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtEvento
		{
			get
			{
				return this._dtEvento;
			}
			set
			{
				if ((this._dtEvento != value))
				{
					this.OndtEventoChanging(value);
					this.SendPropertyChanging();
					this._dtEvento = value;
					this.SendPropertyChanged("dtEvento");
					this.OndtEventoChanged();
				}
			}
		}
		
		[Column(Storage="_dtCriacao", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtCriacao
		{
			get
			{
				return this._dtCriacao;
			}
			set
			{
				if ((this._dtCriacao != value))
				{
					this.OndtCriacaoChanging(value);
					this.SendPropertyChanging();
					this._dtCriacao = value;
					this.SendPropertyChanged("dtCriacao");
					this.OndtCriacaoChanged();
				}
			}
		}
		
		[Column(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[Association(Name="Usuario_Kart_Noticias_Grupo", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Kart_Noticias_Grupos.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Kart_Noticias_Grupos.Add(this);
						this._IdUsuario = value.idUsuario;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
